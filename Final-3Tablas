Sub Final()
    Dim folderPath As String
    Dim saveFolderPath As String
    Dim fileName As String
    Dim doc As Document
    Dim textos_a_reemplazar As Variant
    Dim texto_reemplazo As String
    Dim sec As Section
    Dim hdrftr As HeaderFooter
    Dim newFileName As String
    Dim fDialog As FileDialog
    Dim texto As Variant
    Dim tbl As Table
    Dim lastRow As Row
    Dim cellTexts As Variant
    Dim i As Integer
    Dim j As Integer
    Dim revNumber As String ' Variable para almacenar el número o letra después de "Rev"

    ' Definir los textos a buscar y el texto de reemplazo
    textos_a_reemplazar = Array("Hudson Respiratory Care Tecate", "Hudson", "Hudson RCI", "Hudson Respiratory Care")
    texto_reemplazo = "Teleflex Tecate"

    ' Solicitar al usuario que seleccione la carpeta con los documentos
    Set fDialog = Application.FileDialog(msoFileDialogFolderPicker)
    If fDialog.Show = -1 Then
        folderPath = fDialog.SelectedItems(1)
    Else
        MsgBox "No se seleccionó ninguna carpeta. El proceso se cancela."
        Exit Sub
    End If

    ' Solicitar al usuario que seleccione la carpeta de destino para guardar los documentos
    Set fDialog = Application.FileDialog(msoFileDialogFolderPicker)
    If fDialog.Show = -1 Then
        saveFolderPath = fDialog.SelectedItems(1)
    Else
        MsgBox "No se seleccionó ninguna carpeta de destino. El proceso se cancela."
        Exit Sub
    End If

    ' Buscar y reemplazar en cada documento de la carpeta
    fileName = Dir(folderPath & "\*.docx") ' Puedes cambiar el filtro a *.doc si es necesario
    Do While fileName <> ""
        ' Extraer el número o letra después de "Rev"
        Dim fileNameUpper As String
        fileNameUpper = UCase(fileName)
        
        revStart = InStr(fileNameUpper, "REV")
        finalStart = InStr(fileNameUpper, "FINAL")
        If revStart > 0 Then
            ' Encontrar la posición del final del nombre del archivo antes de la extensión
            revEnd = InStr(revStart, fileName, ".docx") ' Cambia a ".doc" si es necesario
        
            ' Extraer el número/revisión
            If revStart > 0 And finalStart > revStart Then
                ' Extraer el número o texto entre "Rev" y "Final"
                revNumber = Mid(fileName, revStart + 3, finalStart - revStart - 3)
            End If
        End If
        
        ' Abrir el documento
        Set doc = Documents.Open(folderPath & "\" & fileName, ReadOnly:=False, Visible:=False)
        
        ' Buscar y reemplazar texto en todo el documento
        For Each texto In textos_a_reemplazar
            ' Reemplazo en el contenido del documento
            With doc.Content.Find
                .Text = texto
                .Replacement.Text = texto_reemplazo
                .Forward = True
                .Wrap = wdFindContinue
                .Format = False
                .MatchCase = False
                .MatchWholeWord = False
                .MatchWildcards = False
                .MatchSoundsLike = False
                .MatchAllWordForms = False
                .Execute Replace:=wdReplaceAll
            End With
            ' Reemplazo en encabezados y pies de página
            For Each sec In doc.Sections
                For Each hdrftr In sec.Headers
                    With hdrftr.Range.Find
                        .Text = texto
                        .Replacement.Text = texto_reemplazo
                        .Forward = True
                        .Wrap = wdFindStop
                        .Format = False
                        .MatchCase = False
                        .MatchWholeWord = False
                        .MatchWildcards = False
                        .MatchSoundsLike = False
                        .MatchAllWordForms = False
                        .Execute Replace:=wdReplaceAll
                    End With
                Next hdrftr
                For Each hdrftr In sec.Footers
                    With hdrftr.Range.Find
                        .Text = texto
                        .Replacement.Text = texto_reemplazo
                        .Forward = True
                        .Wrap = wdFindStop
                        .Format = False
                        .MatchCase = False
                        .MatchWholeWord = False
                        .MatchWildcards = False
                        .MatchSoundsLike = False
                        .MatchAllWordForms = False
                        .Execute Replace:=wdReplaceAll
                    End With
                Next hdrftr
            Next sec
        Next texto

        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
If doc.Tables.Count > 0 Then
    ' Recorrer todas las tablas del documento
    For i = 1 To doc.Tables.Count
        Set tbl = doc.Tables(i)
        ' Verificar si la tabla tiene al menos 5 columnas
        If tbl.Columns.Count = 3 Then
            ' Verificar si la tabla tiene los títulos esperados en inglés o español
            If (Trim(tbl.Cell(1, 1).Range.Text) Like "*Revision*" And _
                Trim(tbl.Cell(1, 2).Range.Text) Like "*Number*" And _
                Trim(tbl.Cell(1, 3).Range.Text) Like "*Changes*") Or _
               (Trim(tbl.Cell(1, 1).Range.Text) Like "*Nivel*" And _
                Trim(tbl.Cell(1, 2).Range.Text) Like "*Orden*" And _
                Trim(tbl.Cell(1, 3).Range.Text) Like "*Cambios*") Then
                ' Reemplazar el texto en la última fila de la tabla
                Set lastRow = tbl.Rows(tbl.Rows.Count)
                
                ' Definir el texto para cada celda según el idioma detectado
                If Trim(tbl.Cell(1, 2).Range.Text) Like "*Number*" Then
                    cellTexts = Array(revNumber, "", "The document has been updated to the latest revision of the Tecate local template, with ""Hudson Respiratory"" removed as part of the rebranding project. This is an administrative change, and the document retains the same revision")
                Else
                    cellTexts = Array(revNumber, "", "El documento ha sido actualizado a la última revisión de la plantilla local de Tecate, con la eliminación de «Hudson Respiratory» como parte del proyecto de cambio de marca. Se trata de un cambio administrativo, y el documento conserva la misma revisión.")
                End If
                
                ' Asignar el texto correspondiente a cada celda de la última fila
                For j = LBound(cellTexts) To UBound(cellTexts)
                    lastRow.Cells(j + 1).Range.Text = cellTexts(j)
                Next j
            End If
        End If
    Next i
End If

        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
        ' Guardar el documento con el mismo nombre en la carpeta de destino
        doc.SaveAs2 fileName:=saveFolderPath & "\" & fileName, FileFormat:=wdFormatXMLDocument

        ' Cerrar el documento
        doc.Close SaveChanges:=False
        
        ' Obtener el siguiente archivo
        fileName = Dir
    Loop

    MsgBox "Terminado :)"
End Sub
